---

- name: Check OpenSSH client version
  environment:
    LC_MESSAGES: 'C'
  shell: 'ssh -V 2>&1 | grep --only-matching --extended-regexp --regexp="OpenSSH_[a-z0-9.]+" | sed -re "s/^OpenSSH_([0-9]+\.[0-9]+).*/\1/"'
  register: _ssh_client__version
  changed_when: False
  check_mode: no

- name: 'Setup {{ ssh_client__config_dir}}/ssh_config'
  template:
    src:   'ssh_config.j2'
    dest:  '{{ ssh_client__config_dir }}/ssh_config'
    owner: root
    group: root
    mode:  0644
    backup: yes
    validate: '{{ "ssh -F %s -G > /dev/null" if _ssh_client__version.stdout|version_compare("6.7", ">") else "true %s" }}'

- name: Retrieve all other public keys
  set_fact:
    _ssh__client_host_keys: "{{ _ssh__client_host_keys|d([])|union([
          item[0]~' '~ssh_client__host_key_ansible_vars[item[1]]~' '~hostvars[item[0]][item[1]],
          hostvars[item[0]]['ansible_host']~' '~ssh_client__host_key_ansible_vars[item[1]]~' '~hostvars[item[0]][item[1]],
      ]) }}"
  when: item[0] != ansible_fqdn and hostvars[item[0]][item[1]] is defined
  with_nested:
    - '{{ hostvars.keys() }}'
    - '{{ ssh_client__host_key_ansible_vars.keys() }}'

- name: Check that all hosts keys are valid
  known_hosts:
    path: '{{ ssh_client__global_known_host_file }}'
    name: "{{ item.split(' ')[0] }}"
    key: '{{ item }}'
    state: present
  with_items: '{{ _ssh__client_host_keys }}'
  check_mode: yes

- name: Deploy known hosts public keys
  template:
    src: ssh_known_hosts.j2
    dest: '{{ ssh_client__global_known_host_file }}'
    owner: root
    group: root
    mode: 0600
  register: _ssh_client_known_host_template

- name: Check for existence of hashed known hosts file
  stat:
    path: '{{ ssh_client__global_known_host_hashed_file }}'
  register: _ssh_client_known_host_hashed_file

- name: Hash known host file
  shell: >
    cp "{{ ssh_client__global_known_host_file }}" "{{ ssh_client__global_known_host_hashed_file }}" &&
    ssh-keygen -H -f "{{ ssh_client__global_known_host_hashed_file }}" &&
    rm --force "{{ ssh_client__global_known_host_hashed_file }}.old"
  when: not _ssh_client_known_host_hashed_file.stat.exists or _ssh_client_known_host_template|changed

- name: Set permissions on hash known host file
  file:
    path: '{{ ssh_client__global_known_host_hashed_file }}'
    mode: 0644
    owner: root
    group: root
    state: file
  ignore_errors: yes
