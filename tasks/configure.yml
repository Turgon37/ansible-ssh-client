---

- name: Setup ssh_config
  template:
    src:      'ssh_config.j2'
    dest:     '{{ ssh_client__config_dir }}/ssh_config'
    owner:    root
    group:    root
    mode:     0644
    validate: '{{ "ssh -F %s -G > /dev/null" if _ssh_client__version|version_compare(6.7, ">") else "/usr/bin/env true %s" }}'

- name: Check that all hosts keys are valid
  known_hosts:
    path:  '{{ ssh_client__global_known_host_file }}'
    name:  "{{ item.split(' ')[0] }}"
    key:   '{{ item }}'
    state: present
  with_items: '{{ _ssh__client_host_keys }}'
  check_mode: yes
  no_log: true

- name: Deploy known hosts public keys
  template:
    src:   ssh_known_hosts.j2
    dest:  '{{ ssh_client__global_known_host_file }}'
    owner: root
    group: root
    mode:  0600
  register: _ssh_client_known_host_template

- name: Check for existence of hashed known hosts file
  stat:
    path: '{{ ssh_client__global_known_host_hashed_file }}'
  register: _ssh_client_known_host_hashed_file

- name: Hash known host file
  shell: >
    cp "{{ ssh_client__global_known_host_file }}" "{{ ssh_client__global_known_host_hashed_file }}" &&
    ssh-keygen -H -f "{{ ssh_client__global_known_host_hashed_file }}" &&
    rm --force "{{ ssh_client__global_known_host_hashed_file }}.old"
  when: not _ssh_client_known_host_hashed_file.stat.exists or _ssh_client_known_host_template|changed

- name: Set permissions on hash known host file
  file:
    path:  '{{ ssh_client__global_known_host_hashed_file }}'
    mode:  0644
    owner: root
    group: root
    state: file
  ignore_errors: yes
