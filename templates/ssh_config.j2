{%- import '_macros.j2' as macros with context -%}
#
# {{ ansible_managed }}
#

# Configuration data is parsed as follows:
#  1. command line options
#  2. user-specific file
#  3. system-wide file
# Any configuration value is only changed the first time it is set.
# Thus, host-specific definitions should be at the beginning of the
# configuration file, and defaults at the end.

Host *
  ### GENERAL SECTION
  Protocol 2

  ### NETWORK SECTION
  Port {{ ssh_client__port }}
  AddressFamily "{{ ssh_client__address_family }}"
{% if ssh_client__proxy_command is defined %}
  ProxyCommand {{ ssh_client__proxy_command }}
{% endif %}

  ### Encryption parameters
{% set _ssh_client__tpl_kex_algorithms = [] %}
{% set _ssh_client__tpl_kex_algorithms_match = False %}
{% for key, value in ssh_client__kex_algorithms_map.iteritems() %}
{%   if not _ssh_client__tpl_kex_algorithms_match and _ssh_client__version|version_compare(key, '>=') %}
{%     set _ssh_client__tpl_kex_algorithms_match = True %}
{%     for element in value %}
{%       set _ = _ssh_client__tpl_kex_algorithms.append(element) %}
{%     endfor %}
{%   endif %}
{% endfor %}
{% set _ssh_client__tpl_kex_algorithms = _ssh_client__tpl_kex_algorithms|union(ssh_client__kex_algorithms_additional)|unique %}
{% if _ssh_client__tpl_kex_algorithms %}
  KexAlgorithms {{ _ssh_client__tpl_kex_algorithms|join(",") }}
{% endif %}

{% set _ssh_client__tpl_ciphers = [] %}
{% set _ssh_client__tpl_ciphers_match = False %}
{% for key, value in ssh_client__ciphers_map.iteritems() %}
{%   if not _ssh_client__tpl_ciphers_match and _ssh_client__version|version_compare(key, '>=') %}
{%     set _ssh_client__tpl_ciphers_match = True %}
{%     for element in value %}
{%       set _ = _ssh_client__tpl_ciphers.append(element) %}
{%     endfor %}
{%   endif %}
{% endfor %}
{% set _ssh_client__tpl_ciphers = _ssh_client__tpl_ciphers|union(ssh_client__ciphers_additional)|unique %}
{% if _ssh_client__tpl_ciphers %}
  Ciphers {{ _ssh_client__tpl_ciphers|join(",") }}
{% endif %}

{% set _ssh_client__tpl_macs = [] %}
{% set _ssh_client__tpl_macs_match = False %}
{% for key, value in ssh_client__macs_map.iteritems() %}
{%   if not _ssh_client__tpl_macs_match and _ssh_client__version|version_compare(key, '>=') %}
{%     set _ssh_client__tpl_macs_match = True %}
{%     for element in value %}
{%       set _ = _ssh_client__tpl_macs.append(element) %}
{%     endfor %}
{%   endif %}
{% endfor %}
{% set _ssh_client__tpl_macs = _ssh_client__tpl_macs|union(ssh_client__macs_additional)|unique %}
{% if _ssh_client__tpl_macs %}
  MACs {{ _ssh_client__tpl_macs|join(",") }}
{% endif %}

  ### AUTHENTIFICATION MODE
  ## Password authentication
  PasswordAuthentication {{ macros.bool(ssh_client__password_authentication) }}

  ## ChallengeResponse Authentication
  ChallengeResponseAuthentication {{ macros.bool(ssh_client__challenge_response_authentication) }}

  ## Keyboard Interactive authentification
  KbdInteractiveAuthentication {{ macros.bool(ssh_client__keyboardinteractive_authentication) }}

  ## PubKey authentication
  PubkeyAuthentication {{ macros.bool(ssh_client__pubkey_authentication) }}

  ## RSAAuthentication
  # Protocol 1
  RSAAuthentication {{ macros.bool(ssh_client__rsa_authentication) }}
  RhostsRSAAuthentication {{ macros.bool(ssh_client__rhosts_rsa_authentication) }}

  ## HostbasedAuthentication
  # Protocol 2
  HostbasedAuthentication {{ macros.bool(ssh_client__host_based_authentication) }}

  ## GSSAPI authentication
  GSSAPIAuthentication {{ macros.bool(ssh_client__gssapi_authentication) }}
{% if ssh_client__gssapi_authentication|bool %}
  GSSAPIDelegateCredentials {{ macros.bool(ssh_client__gssapi_delegate_credentials) }}
  GSSAPIKeyExchange {{ macros.bool(ssh_client__gssapi_key_exchange) }}
  GSSAPITrustDNS {{ macros.bool(ssh_client__gssapi_trust_dns) }}
{% endif %}



  HashKnownHosts yes

  SendEnv {{ (ssh_client__send_env | d([]) | list) | unique | join(" ") }}

  ForwardX11 {{ ssh_client__x11_forwarding }}

  GlobalKnownHostsFile {{ ssh_client__known_hosts if ssh_client__known_hosts is string else (ssh_client__known_hosts|d([])|list|join(' ')) }}

#   BatchMode no
#   CheckHostIP yes

#   ConnectTimeout 0
#   StrictHostKeyChecking ask


#   EscapeChar ~
#   Tunnel no
#   TunnelDevice any:any
#   PermitLocalCommand no
#   VisualHostKey no
#   ProxyCommand ssh -q -W %h:%p gateway.example.com
#   RekeyLimit 1G 1h
#
# Uncomment this if you want to use .local domain
# Host *.local
#   CheckHostIP no	
# If this option is set to yes then remote X11 clients will have full access
# to the original X11 display. As virtually no X11 client supports the untrusted
# mode correctly we set this to yes.
#	ForwardX11Trusted yes
