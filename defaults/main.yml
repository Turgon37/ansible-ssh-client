---
# defaults file for ssh-client

# Enable facts deploiement
ssh_client__facts: True

# The name of the openssh client package
ssh_client__package_name: 'openssh-client'

# Main directory for ssh configuration
ssh_client__config_dir: /etc/ssh

# If true the ssh_known_hosts will be templated
ssh_client__generate_known_hosts: False



### NETWORK SECTION
# ---------------------------------------
# The default port on which ``ssh`` will connect to.
ssh_client__port: '22'

#Specifies which address family to use when connecting.
# Valid arguments are “any”, “inet” (use IPv4 only), or “inet6” (use IPv6 only).
ssh_client__address_family: 'any'

#Specifies the command to use to connect to the server.
#ssh_client__proxy_command:



### Encryption parameters
# -------------------------
# Dict with list of ciphers which should be used by the ``sshd`` server,
# depending on available version, ordered from strongest to weakest. Newer version
# supersedes older version.
ssh_client__ciphers_map:

  # Source: https://wiki.mozilla.org/Security/Guidelines/OpenSSH
  '6.5':
    - 'chacha20-poly1305@openssh.com'
    - 'aes256-gcm@openssh.com'
    - 'aes128-gcm@openssh.com'
    - 'aes256-ctr'
    - 'aes192-ctr'
    - 'aes128-ctr'

  # Source: https://xivilization.net/~marek/blog/2015/01/12/secure-secure-shell-on-debian-wheezy/
  '6.0':
    - 'aes256-ctr'
    - 'aes192-ctr'
    - 'aes128-ctr'

# List of additional key exchange algorithms which should be used by the
# ``sshd`` server, depending on available version, depending on available
# version, ordered from stronger to weaker. Newer version supersedes older version.
ssh_client__ciphers_additional: []

# Dict with list of key exchange algorithms which should be used by the
# ``sshd`` server, depending on available version, ordered from strongest to
# oldest. Newer version supersedes older version.
ssh_client__kex_algorithms_map:

  # Source : https://stribika.github.io/2015/01/04/secure-secure-shell.html
  '6.6':
    - 'curve25519-sha256@libssh.org'
    - 'diffie-hellman-group-exchange-sha256'

  # Source: https://wiki.mozilla.org/Security/Guidelines/OpenSSH
  '6.5':
    - 'curve25519-sha256@libssh.org'
    - 'ecdh-sha2-nistp521'
    - 'ecdh-sha2-nistp384'
    - 'ecdh-sha2-nistp256'
    - 'diffie-hellman-group-exchange-sha256'

  # Source: https://xivilization.net/~marek/blog/2015/01/12/secure-secure-shell-on-debian-wheezy/
  '6.0':
    - 'diffie-hellman-group-exchange-sha256'

# List of additional key exchange algorithms which should be used by the
# ``sshd`` server, depending on available version, depending on available
# version, ordered from stronger to weaker. Newer version supersedes older
# version.
ssh_client__kex_algorithms_additional: []

#
# Dict with list of message authentication code algorithms which should be used
# by the ``sshd`` server, depending on available version, ordered from stronger
# to weaker. Newer version supersedes older version.
ssh_client__macs_map:

  # Source : https://stribika.github.io/2015/01/04/secure-secure-shell.html
  '6.6':
    - 'hmac-sha2-512-etm@openssh.com'
    - 'hmac-sha2-256-etm@openssh.com'
    - 'hmac-ripemd160-etm@openssh.com'
    - 'umac-128-etm@openssh.com'
    - 'hmac-sha2-512'
    - 'hmac-sha2-256'
    - 'hmac-ripemd160'
    - 'umac-128@openssh.com'

  # Source: https://wiki.mozilla.org/Security/Guidelines/OpenSSH
  '6.5':
    - 'hmac-sha2-512-etm@openssh.com'
    - 'hmac-sha2-256-etm@openssh.com'
    - 'umac-128-etm@openssh.com'
    - 'hmac-sha2-512'
    - 'hmac-sha2-256'
    - 'umac-128@openssh.com'

  # Source: https://xivilization.net/~marek/blog/2015/01/12/secure-secure-shell-on-debian-wheezy/
  '6.0':
    - 'hmac-sha2-512'
    - 'hmac-sha2-256'
    - 'hmac-ripemd160'

#
# List of additional message authentication code algorithms to support
# by the ``sshd`` server, depending on available version, ordered from stronger
# to weaker. Newer version supersedes older version.
ssh_client__macs_additional: []



### AUTHENTIFICATION MODE
# ---------------------------------------

## Password authentication
# ---------------------------------------
# Enable or disable password authentication.
ssh_client__password_authentication: True

## ChallengeResponse Authentication
# ---------------------------------------
# If challenge-response authentication is allowed
ssh_client__challenge_response_authentication: True

## Keyboard Interactive authentifiaction
# ---------------------------------------
ssh_client__keyboardinteractive_authentication: True

## PubKey authentication
# ---------------------------------------
ssh_client__pubkey_authentication: True

## RSA authentication
# ---------------------------------------
# Protocol 1
# If pure RSA authentication is allowed.
ssh_client__rsa_authentication: False
ssh_client__rhosts_rsa_authentication: False

## Hostbased authentication
# ---------------------------------------
ssh_client__host_based_authentication: False

## GSSAPI authentication
# ---------------------------------------
ssh_client__gssapi_authentication: False

ssh_client__gssapi_delegate_credentials: False
ssh_client__gssapi_key_exchange: False
ssh_client__gssapi_trust_dns: False



### LOGIN
# ------------------------------

## User environment
# ------------------------------
# List of environments variable that the server will accept to load
ssh_client__send_env:
  - 'LANG'
  - 'LC_*'

## X11 FORWARDING
# ------------------------------
# Enable or disable X11 forwarding by the server.
ssh_client__forward_x11: False

# If this option is set to yes then remote X11 clients will have full access
# to the original X11 display. As virtually no X11 client supports the untrusted
# mode correctly we set this to yes.
ssh_client__forward_x11_thrusted: False


### Custom rules
# ---------------------------------------
ssh_client__global_custom_config: {}
ssh_client__group_custom_config: {}
ssh_client__host_custom_config: {}

ssh_client__custom_config: '{{ ssh_client__global_custom_config|
                                combine(ssh_client__group_custom_config, recursive=True)|
                                combine(ssh_client__host_custom_config, recursive=True) }}'










ssh_client__global_known_host_file: /etc/ssh/ssh_known_hosts
ssh_client__global_known_host_hashed_file: '{{ ssh_client__global_known_host_file }}_hashed'

# Mapping between ansible SSH key keys and SSH-KEYGEN tool type names
ssh_client__host_key_ansible_vars:
  ansible_ssh_host_key_ecdsa_public: ecdsa-sha2-nistp256
  ansible_ssh_host_key_ed25519_public: ssh-ed25519
  ansible_ssh_host_key_rsa_public: ssh-rsa
  ansible_ssh_host_key_dsa_public: ssh-dss


# KnownHost File keys management
# ------------------------------

# List of files which contain SSH public keys, to be used to authenticate
# remote users.
ssh_client__known_hosts:
  - '{{ ssh_client__global_known_host_hashed_file }}'

# Additionnals ssh keys to add in known_hosts file
ssh_client__known_hosts_additionals: []
